/* */ 
"format cjs";
/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.2-master-bb8fd26
 */
function MdCheckboxDirective(e,i,n,t,o,c){function a(a,r){return r.type="checkbox",r.tabindex=r.tabindex||"0",a.attr("role",r.type),a.on("click",function(e){this.hasAttribute("disabled")&&e.stopImmediatePropagation()}),function(a,r,l,s){function u(e,i,n){l[e]&&a.$watch(l[e],function(e){n[e]&&r.attr(i,n[e])})}function m(e){var i=e.which||e.keyCode;(i===n.KEY_CODE.SPACE||i===n.KEY_CODE.ENTER)&&(e.preventDefault(),r.hasClass("md-focused")||r.addClass("md-focused"),h(e))}function h(e){r[0].hasAttribute("disabled")||a.$apply(function(){var i=l.ngChecked?l.checked:!s.$viewValue;s.$setViewValue(i,e&&e.type),s.$render()})}function p(){s.$viewValue?r.addClass(d):r.removeClass(d)}s=s||o.fakeNgModel(),t(r),l.ngChecked&&a.$watch(a.$eval.bind(a,l.ngChecked),s.$setViewValue.bind(s)),u("ngDisabled","tabindex",{"true":"-1","false":l.tabindex}),i.expectWithText(r,"aria-label"),e.link.pre(a,{on:angular.noop,0:{}},l,[s]),a.mouseActive=!1,r.on("click",h).on("keypress",m).on("mousedown",function(){a.mouseActive=!0,c(function(){a.mouseActive=!1},100)}).on("focus",function(){a.mouseActive===!1&&r.addClass("md-focused")}).on("blur",function(){r.removeClass("md-focused")}),s.$render=p}}e=e[0];var d="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:a}}goog.provide("ng.material.components.checkbox"),goog.require("ng.material.core"),angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective),MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"],ng.material.components.checkbox=angular.module("material.components.checkbox");